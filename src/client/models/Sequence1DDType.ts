/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface Sequence1DDType
 */
export interface Sequence1DDType {
    /**
     *
     * @type {string}
     * @memberof Sequence1DDType
     */
    name?: Sequence1DDTypeNameEnum;
    /**
     *
     * @type {string}
     * @memberof Sequence1DDType
     */
    xLabel: string;
    /**
     *
     * @type {string}
     * @memberof Sequence1DDType
     */
    yLabel: string;
}

/**
 * @export
 */
export const Sequence1DDTypeNameEnum = {
    Sequence1D: 'Sequence1D',
} as const;
export type Sequence1DDTypeNameEnum =
    typeof Sequence1DDTypeNameEnum[keyof typeof Sequence1DDTypeNameEnum];

/**
 * Check if a given object implements the Sequence1DDType interface.
 */
export function instanceOfSequence1DDType(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'xLabel' in value;
    isInstance = isInstance && 'yLabel' in value;

    return isInstance;
}

export function Sequence1DDTypeFromJSON(json: any): Sequence1DDType {
    return Sequence1DDTypeFromJSONTyped(json, false);
}

export function Sequence1DDTypeFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): Sequence1DDType {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        name: !exists(json, 'name') ? undefined : json['name'],
        xLabel: json['x_label'],
        yLabel: json['y_label'],
    };
}

export function Sequence1DDTypeToJSON(value?: Sequence1DDType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        name: value.name,
        x_label: value.xLabel,
        y_label: value.yLabel,
    };
}
