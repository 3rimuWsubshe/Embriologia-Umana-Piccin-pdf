/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Severity } from './Severity';
import { SeverityFromJSON, SeverityFromJSONTyped, SeverityToJSON } from './Severity';

/**
 * An Issue affecting multiple rows of the dataset
 * @export
 * @interface DataIssue
 */
export interface DataIssue {
    /**
     *
     * @type {Severity}
     * @memberof DataIssue
     */
    severity?: Severity;
    /**
     *
     * @type {string}
     * @memberof DataIssue
     */
    title: string;
    /**
     *
     * @type {Array<number>}
     * @memberof DataIssue
     */
    rows: Array<number>;
    /**
     *
     * @type {Array<string>}
     * @memberof DataIssue
     */
    columns?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof DataIssue
     */
    description?: string;
}

/**
 * Check if a given object implements the DataIssue interface.
 */
export function instanceOfDataIssue(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'title' in value;
    isInstance = isInstance && 'rows' in value;

    return isInstance;
}

export function DataIssueFromJSON(json: any): DataIssue {
    return DataIssueFromJSONTyped(json, false);
}

export function DataIssueFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): DataIssue {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        severity: !exists(json, 'severity')
            ? undefined
            : SeverityFromJSON(json['severity']),
        title: json['title'],
        rows: json['rows'],
        columns: !exists(json, 'columns') ? undefined : json['columns'],
        description: !exists(json, 'description') ? undefined : json['description'],
    };
}

export function DataIssueToJSON(value?: DataIssue | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        severity: SeverityToJSON(value.severity),
        title: value.title,
        rows: value.rows,
        columns: value.columns,
        description: value.description,
    };
}
