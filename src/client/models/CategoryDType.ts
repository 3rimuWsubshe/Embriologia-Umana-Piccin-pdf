/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface CategoryDType
 */
export interface CategoryDType {
    /**
     *
     * @type {string}
     * @memberof CategoryDType
     */
    name?: CategoryDTypeNameEnum;
    /**
     *
     * @type {{ [key: string]: number; }}
     * @memberof CategoryDType
     */
    categories: { [key: string]: number };
}

/**
 * @export
 */
export const CategoryDTypeNameEnum = {
    Category: 'Category',
} as const;
export type CategoryDTypeNameEnum =
    typeof CategoryDTypeNameEnum[keyof typeof CategoryDTypeNameEnum];

/**
 * Check if a given object implements the CategoryDType interface.
 */
export function instanceOfCategoryDType(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'categories' in value;

    return isInstance;
}

export function CategoryDTypeFromJSON(json: any): CategoryDType {
    return CategoryDTypeFromJSONTyped(json, false);
}

export function CategoryDTypeFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): CategoryDType {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        name: !exists(json, 'name') ? undefined : json['name'],
        categories: json['categories'],
    };
}

export function CategoryDTypeToJSON(value?: CategoryDType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        name: value.name,
        categories: value.categories,
    };
}
